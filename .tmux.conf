# first, in Linux settings remap Caps Lock to be Ctrl for better usability!
# unbind default prefix and use Ctrl+s instead
unbind C-b
set-option -g prefix C-s

# some shell commands have Ctrl+s binding (e.g. direct i-search in terminal)
# NOTE: you might need to run "stty -ixon" to disable XON/XOFF feature
#       which takes over Ctrl+s and freeze the terminal. Use Ctrl+q to unfreeze
#       Add "stty -ixon" to .bashrc.
bind-key -r C-s send-prefix
# -r means you won't need to press prefix each time, only the first time (repeat)

# prefix + r - reload tmux config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# tmux color mapping
set-option -g default-terminal "screen-256color"
# emacs bindings for the status prompt (better than vi emulation)
set-option -g status-keys "emacs"


### Status bar config ###
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
# show full title of the session
set-option -g status-left-length 50
set-option -g status-right " #(date '+%a, %b %d - %H:%M') "


### Pane navigation ###
# prefix + h/j/k/l - go to left/down/upper/right pane
# -n means you don't need prefix with Ctrl + h
#bind -n C-h select-pane -L
#bind -n C-j select-pane -D
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# Requires in .vimrc:
# Plugin 'christoomey/vim-tmux-navigator'
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# prefix + - - split current pane vertically
# prefix + \ - split current pane horizontally
# NOTE: pane will be opened in the current directory
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# Shift + Left/Right/Down/Up Arrow - resize pane in smaller and bigger increments
# fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Ctrl + Left/Right/Down/Up Arrow - resize pane in smaller and bigger increments
# coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# prefix + b - detach the current pane to another window
bind-key b break-pane -d

# Useful default key bindings:
# prefix + z - zoom pane (maximaze the pane temporarily)
# C-d - close the current pane


### Window management ###
# Creation using the current path: prefix + C
bind c new-window -c "#{pane_current_path}"
# Numbering
# Starting with 1
set -g base-index 1 
# Renumber windows as they are created and destroyed to keep the window numbers consistent with the count
set -g renumber-windows on 
# Navigation
# prefix + {number} - switch to the window
# prefix + l - switch to the last window
# prefix + p/n - switch to the previous/next window


### Session management ###
# tmux ls - show running sessions
# tmux a - show choose-tree

# prefix + s - show choose-tree whithin tmux
# prefix + L - switch to the previous session


### Scroll and copy mode ###
#use Vi key bindings in Copy Mode
set-option -g mode-keys vi
#https://www.freecodecamp.org/news/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b/
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi 'Enter' send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# prefix + [ - enter scroll mode
